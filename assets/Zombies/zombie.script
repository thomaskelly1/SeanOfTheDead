local move_acceleration = 8
local max_speed = 1

local gravity= 0 
local ground_contact=false
local wall_contact=false

local msg_contact_point_respond=hash("contact_point_response")
local msg_animation_done=hash("animation_done")
local group_obstacle = hash("walls")

local anim_walk = hash("Walk")
local anim_idle = hash("idle")
local anim_hit = hash("Hit")
local anim_attack = hash("Attack")




function init(self)
	-- Add initialization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
	self.velocity=vmath.vector3(0,0,0)
	self.movement= 1
	self.anim=nil

	
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed

	local target_speed = self.movement*max_speed
	local speed_diff = target_speed - self.velocity.x
	local acceleleration = vmath.vector3(0,gravity,0)

	if (speed_diff~=0) then 
		if (speed_diff>0) then
			acceleleration.x =-move_acceleration
		else
			acceleleration.x = move_acceleration
		end
	end


	local dv = acceleleration *dt
	if(math.abs(dv.x)>math.abs(speed_diff)) then
		dv.x = speed_diff
	end

	local v0 = self.velocity

	self.velocity = self.velocity + dv

	local dp =  (v0 +self.velocity)*dt

	go.set_position(go.get_position() + dp)

	self.correction = vmath.vector3()

	self.ground_contact = false
	self.wall_contact = false
	

	
end

function on_message(self, message_id, message, sender)
	-- Add message-handling code here
	-- Learn more: https://defold.com/manuals/message-passing/
	-- Remove this function if not needed

	if message_id == msg_contact_point_response then
		if message_group == group_obstacle then
			handle_obstacle_contact(self, message.normal,message.distance)
		end
	end
end


local function handle_obstacle_contact(self,normal,distance)
	local proj = vmath.dot(self.correction, normal)
	local comp= (distance-proj)*normal

	self.correction = self.correction+comp

	go.set_position(go.get_position()+comp)

	if normal.y > 0.7 then
		self.ground_contact=false
	end

	proj=vmath.dot(self.velocity, normal)
	if (proj<0) then
		self.velocity = self.velocity - proj*normal
	end
end


function on_input(self, action_id, action)
	-- Add input-handling code here. The game object this script is attached to
	-- must have acquired input focus:
	--
	--    msg.post(".", "acquire_input_focus")
	--
	-- All mapped input bindings will be received. Mouse and touch input will
	-- be received regardless of where on the screen it happened.
	-- Learn more: https://defold.com/manuals/input/
	-- Remove this function if not needed
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
